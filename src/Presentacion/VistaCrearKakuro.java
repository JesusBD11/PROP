/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;


import static java.lang.Math.ceil;
import javax.swing.JSpinner.DefaultEditor;

/**
 * @file VistaCrearKakuro.java
 * @date 20-12-2020
 * @author David Nogales
 * @brief Panel que gestiona la sección de VistaPrincipal para crear un nuevo Kakuro
 * 
 * Panel que muestra al usuario las diferentes opciones de creación de kakuros y realizará las operaciones necesarias segun las opciones que el usuario seleccione.
 */
 
 /**
 * @class VistaCrearKakuro
 * @brief Clase que extiende JPanel que inicializa, gestiona y modifica el panel de la VistaPrincipal para Crear Kakuros.
 */

public class VistaCrearKakuro extends javax.swing.JPanel {
     private VistaPrincipal vp;
     private boolean kakuroEditionMode;
    /**
     * Creates new form VistaCrearKakuro
     */
    public VistaCrearKakuro() {
        initComponents();
    }

    VistaCrearKakuro(VistaPrincipal vistaPrincipal) {
        System.out.println("vista crear kakuro creado!!");
        initComponents();
        vp = vistaPrincipal;
        kakuroEditionMode = false;
        autoRestrict.add(automatic);
        autoRestrict.add(restrictions);
        autoRestrict.add(manual);
        difficulty.add(facil);
        difficulty.add(normal);
        difficulty.add(dificil);
        facil.setEnabled(false);
        normal.setEnabled(false);
        dificil.setEnabled(false);
        dimensiones.setValue(3);
        ((DefaultEditor) dimensiones.getEditor()).getTextField().setEditable(false);
        ((DefaultEditor) numCasillasNegras.getEditor()).getTextField().setEditable(false);
        numCasillasNegras.setValue(5);
        numCasillasNegras.setEnabled(false);
        dimensiones.setEnabled(false);
        crear.setEnabled(false);
        crearJugar.setEnabled(false);
        idUltimoKakuro.setText("-");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        autoRestrict = new javax.swing.ButtonGroup();
        difficulty = new javax.swing.ButtonGroup();
        automatic = new javax.swing.JRadioButton();
        restrictions = new javax.swing.JRadioButton();
        volver = new javax.swing.JButton();
        facil = new javax.swing.JRadioButton();
        normal = new javax.swing.JRadioButton();
        dificil = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        dimensiones = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        numCasillasNegras = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        crear = new javax.swing.JButton();
        crearJugar = new javax.swing.JButton();
        manual = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        idUltimoKakuro = new javax.swing.JLabel();

        automatic.setText("Crear Automaticamente");
        automatic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automaticActionPerformed(evt);
            }
        });

        restrictions.setText("Con restricciones");
        restrictions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restrictionsActionPerformed(evt);
            }
        });

        volver.setText("Volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });

        facil.setText("Facil");
        facil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facilActionPerformed(evt);
            }
        });

        normal.setText("Normal");
        normal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalActionPerformed(evt);
            }
        });

        dificil.setText("Dificil");
        dificil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dificilActionPerformed(evt);
            }
        });

        jLabel1.setText("Elija Dificultad:");

        dimensiones.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dimensionesStateChanged(evt);
            }
        });

        jLabel2.setText("Dimensiones nxn:");

        numCasillasNegras.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numCasillasNegrasStateChanged(evt);
            }
        });

        jLabel3.setText("Numero Casillas negras:");

        crear.setText("Crear");
        crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearActionPerformed(evt);
            }
        });

        crearJugar.setText("Crear y Jugar");
        crearJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearJugarActionPerformed(evt);
            }
        });

        manual.setText(" Manualmente");
        manual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualActionPerformed(evt);
            }
        });

        jLabel4.setText("Ultimo Kakuro Generado:");

        idUltimoKakuro.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(26, 26, 26)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(automatic)
                                .addComponent(restrictions)
                                .addComponent(manual))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(dimensiones, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(numCasillasNegras)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(idUltimoKakuro, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(3, 3, 3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(volver, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(149, 149, 149)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(facil, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(normal, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dificil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(crearJugar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(157, 157, 157)
                    .addComponent(crear, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(181, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(automatic)
                        .addGap(2, 2, 2)
                        .addComponent(restrictions)
                        .addGap(4, 4, 4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(facil, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(normal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(manual)
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(dimensiones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dificil)
                    .addComponent(numCasillasNegras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(idUltimoKakuro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volver)
                    .addComponent(crearJugar))
                .addGap(39, 39, 39))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(230, Short.MAX_VALUE)
                    .addComponent(crear)
                    .addGap(38, 38, 38)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void resetearBotones(){
        autoRestrict.clearSelection();
        difficulty.clearSelection();
        facil.setEnabled(false);
        normal.setEnabled(false);
        dificil.setEnabled(false);
        dimensiones.setValue(3);
        numCasillasNegras.setValue(5);
        kakuroEditionMode = false;
        dimensiones.setEnabled(false);
        numCasillasNegras.setEnabled(false);
        crear.setEnabled(false);
        deshabilitarBotonesJugar();
    }
    
    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        System.out.println("volver pressed!!!");
        resetearBotones();
        vp.changeToNuevaPartida();
        
    }//GEN-LAST:event_volverActionPerformed

    private void crearJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearJugarActionPerformed
        System.out.println("crear y jugar pressed!!!");
        setCondicionesDeCreacion();
        
        if(kakuroEditionMode){
            vp.playAfterEdition(true);
            vp.changeToCrearKakuroManual();
        }
        else{           
            vp.setKakuroenjuego(vp.getUltimoKakuroGuardado());
            vp.changeToJuego();
        }
        resetearBotones();
    }//GEN-LAST:event_crearJugarActionPerformed

    private void setCondicionesDeCreacion(){
        String boton = "";
        if(automatic.isSelected()){
            boton = "automatico";
            int dificultad = 0;
            if(facil.isSelected()) dificultad = 1;
            if(normal.isSelected()) dificultad = 2;
            if(dificil.isSelected()) dificultad = 3;
            System.out.println("dificultad "+dificultad);
            int idKakuroGenerado = vp.generarKakuro(dificultad);
            System.out.println("kakuro generado"+idKakuroGenerado);
            vp.setUltimoKakuroGuardado(idKakuroGenerado);
        }
        if(restrictions.isSelected()){
            boton = "con restricciones";
            int dim = (Integer)dimensiones.getValue();
            int numNegras = (Integer)numCasillasNegras.getValue();
            System.out.println("dimensiones: "+dim+" numero casillas negras: "+numNegras);
            int idKakuroGenerado = vp.generarKakuro(dim,numNegras);
            System.out.println("kakuro generado"+idKakuroGenerado);
            vp.setUltimoKakuroGuardado(idKakuroGenerado);
        }
        if(manual.isSelected()){
            boton = "manual";
            int dim = (Integer)dimensiones.getValue();
            vp.setTableroWithDimensions(dim);
        }
        
        System.out.println("Boton seleccionado:"+boton); 
    
    }
    
    public void setUltimoKakuroLabel(int id){
        if(id>0){
            idUltimoKakuro.setText(String.valueOf(id));
        }
        else{
            idUltimoKakuro.setText("Invalido!!");
        }
        
    }
    public void setDificultadLabel(String dif)
    {
        String id = idUltimoKakuro.getText();
        idUltimoKakuro.setText(String.valueOf(id)+dif);
    }
    private void crearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearActionPerformed
        System.out.println("crear pressed!!!");
        System.out.println("Aqui un Kakuro tendria que ser haberse generado en la biblioteca");
        
        setCondicionesDeCreacion();
        if(kakuroEditionMode){
            vp.changeToCrearKakuroManual();
        }   
            
        //resetearBotones();
    }//GEN-LAST:event_crearActionPerformed

    private void automaticActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automaticActionPerformed
        System.out.println("automatico seleccionado");
        facil.setEnabled(true);
        normal.setEnabled(true);
        dificil.setEnabled(true);
        dimensiones.setEnabled(false);
        numCasillasNegras.setEnabled(false);
        deshabilitarBotonesJugar();
        kakuroEditionMode = false;
    }//GEN-LAST:event_automaticActionPerformed

    private void restrictionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restrictionsActionPerformed
        System.out.println("Con restricciones seleccionado");
        facil.setEnabled(false);
        normal.setEnabled(false);
        dificil.setEnabled(false);
        difficulty.clearSelection();
        dimensiones.setEnabled(true);
        numCasillasNegras.setEnabled(true);
        habilitarBotonesJugar();
        kakuroEditionMode = false;
    }//GEN-LAST:event_restrictionsActionPerformed

    private void manualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualActionPerformed
        System.out.println("Manual seleccionado");
        facil.setEnabled(false);
        normal.setEnabled(false);
        dificil.setEnabled(false);
        difficulty.clearSelection();
        dimensiones.setEnabled(true);
        numCasillasNegras.setEnabled(false);
        habilitarBotonesJugar();
        kakuroEditionMode = true;
    }//GEN-LAST:event_manualActionPerformed

    private void dimensionesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dimensionesStateChanged
        try{
             int dim = (int)dimensiones.getValue();
             if(dim<=2 || dim>=11){
                 if(dim<2){
                     dimensiones.setValue(10);
                 }
                 else{
                     dimensiones.setValue(3);
                 }
             }
             System.out.println("dimensions: "+dim);
             int numB = (int)ceil((dim*dim)*0.6);
             numCasillasNegras.setValue(numB);
        }
        catch(Exception e){
            System.out.println("Error, la entrada no es un numero");
            dimensiones.setValue(3);
        }
    }//GEN-LAST:event_dimensionesStateChanged

    private void numCasillasNegrasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numCasillasNegrasStateChanged
        try{
             int casillasN = (int)numCasillasNegras.getValue();
             int dim = (int)dimensiones.getValue();
             int minValue = (int)(ceil((dim*dim)*0.45));
             if(minValue<=casillasN && casillasN<=(dim-1)){
                System.out.println("casillas negras: "+casillasN);
             }
             else {
                 if(casillasN<minValue) numCasillasNegras.setValue(minValue);
                 if(casillasN>(dim*dim-1)) numCasillasNegras.setValue(dim*dim-1);
                 System.out.println("else-casillas negras: "+casillasN);
             }

        }
        catch(Exception e){
            System.out.println("Error, la entrada no es un numero");
            dimensiones.setValue(5);
        }
    }//GEN-LAST:event_numCasillasNegrasStateChanged

    private void facilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facilActionPerformed
        System.out.println("facil seleccionado");
        habilitarBotonesJugar();
    }//GEN-LAST:event_facilActionPerformed

    private void normalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalActionPerformed
        System.out.println("normal seleccionado");
        habilitarBotonesJugar();
    }//GEN-LAST:event_normalActionPerformed

    private void dificilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dificilActionPerformed
       System.out.println("dificil seleccionado");
       habilitarBotonesJugar();
 
    }//GEN-LAST:event_dificilActionPerformed

    private void habilitarBotonesJugar(){
        crear.setEnabled(true);
        crearJugar.setEnabled(true);
    }
    private void deshabilitarBotonesJugar(){
        crear.setEnabled(false);
        crearJugar.setEnabled(false);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup autoRestrict;
    private javax.swing.JRadioButton automatic;
    private javax.swing.JButton crear;
    private javax.swing.JButton crearJugar;
    private javax.swing.ButtonGroup difficulty;
    private javax.swing.JRadioButton dificil;
    private javax.swing.JSpinner dimensiones;
    private javax.swing.JRadioButton facil;
    private javax.swing.JLabel idUltimoKakuro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton manual;
    private javax.swing.JRadioButton normal;
    private javax.swing.JSpinner numCasillasNegras;
    private javax.swing.JRadioButton restrictions;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
